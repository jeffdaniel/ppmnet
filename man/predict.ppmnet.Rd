% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.ppmnet}
\alias{predict.ppmnet}
\title{Make predictions from a 'ppmnet' object}
\usage{
\method{predict}{ppmnet}(object, data, window = NULL, eps = NULL,
  dimyx = NULL, s = NULL, type = c("trend", "intensity", "cif"), ...)
}
\arguments{
\item{object}{A fitted \code{ppmnet} object.}

\item{data}{A list of pixel images (of class \code{imlist})
containing the spatial covariates used to fit the model.}

\item{window}{Optional. An observation window (of class \code{owin})
defining the region within which predictions are to be made. Default
is the window of the original data used to fit the model.}

\item{eps}{Optional. The height and width of pixels in the prediction
image(s). A numeric value or numeric vector of length 2 specifying
pixel dimensions in the \strong{x} and \strong{y} directions.
Incompatible with \code{dimyx}.}

\item{dimyx}{Optional. The resolution of the prediction image(s). A numeric
value or numeric vector of length 2 specifying the number of pixels in
the \strong{y} and \strong{x} directions. Incompatible with
\code{eps}.}

\item{s}{Value(s) of the penalty tuning parameter at which predictions are to
be made. Default is the entire sequence used to fit the regularization
path.}

\item{type}{Type of prediction required. Either "\code{trend}" for the
spatial trend, "\code{intensity}" for the intensity (Poisson models
 only), or "\code{cif}" for the conditional intensity.}

\item{...}{Additional arguments passed to \code{predict.glmnet}.}
}
\value{
A list of pixel images containing predictions, or, if \code{s} is of
        length 1, a single pixel image.
}
\description{
Makes predictions from a regularized spatial point process model fit via
penalized composite likelihood.
}
\examples{
# Predicted intensities
Qp <- quadscheme(Xp)
fitp <- ppmnet(Qp, exdata)
predict(fitp, exdata)

# Predicted conditional intensities
Qs <- quadscheme(Xs)
fits <- ppmnet(Qs, exdata, Strauss(5), nlambda = 20)
predict(fits, exdata, type = "cif")

}
